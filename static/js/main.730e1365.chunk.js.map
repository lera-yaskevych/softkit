{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","useState","selected","setSelected","blueSquaresCount","setBlueSquaresCount","hasError","setError","isSuccessful","setSuccessful","useEffect","Math","floor","random","clickHandler","squareNo","value","includes","filter","number","unselectSquare","className","map","square","type","classNames","onClick","event","preventDefault","some","length","setTimeout","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0TAKaA,EAAgB,WAC3B,IACA,EAAgCC,mBAAmB,IAAnD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAgDF,mBAAS,GAAzD,mBAAOG,EAAP,KAAyBC,EAAzB,KACA,EAA6BJ,oBAAS,GAAtC,mBAAOK,EAAP,KAAiBC,EAAjB,KACA,EAAsCN,oBAAS,GAA/C,mBAAOO,EAAP,KAAqBC,EAArB,KAEAC,qBAAU,WACRL,EAAoBM,KAAKC,MAAsB,EAAhBD,KAAKE,SAAe,MAClD,IAEH,IAQMC,EAAe,SAACC,GARD,IAACC,EASfd,EAASe,SAASF,GALF,SAACC,GACtBb,EAAYD,EAASgB,QAAO,SAAAC,GAAM,OAAIA,IAAWH,MAO/CI,CAAeL,IAZGC,EAULD,EATfZ,EAAY,GAAD,mBAAKD,GAAL,CAAec,OAiC5B,OACE,sBAAKK,UAAU,MAAf,UA7Cc,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GA8CnBC,KAAI,SAAAC,GAAM,OACjB,wBACEC,KAAK,SACLH,UAAWI,IAAW,4BAAD,OAA6BF,GAAU,CAC1D,wBAAyBrB,EAASe,SAASM,GAC3C,oBAAqBA,GAAUnB,IAGjCsB,QAAS,kBAAMZ,EAAaS,IAP9B,SASGA,GAHIA,MAORjB,GACC,mBAAGe,UAAU,mCAAb,8CAKDb,GACC,mBAAGa,UAAU,qCAAb,uCAKF,wBACEG,KAAK,SACLH,UAAU,cACVK,QAAS,SAAAC,GACPA,EAAMC,iBAjDR1B,EAAS2B,MAAK,SAAAV,GAAM,OAAIA,EAASf,MAC9BF,EAAS4B,OAAS1B,IACjBF,EAAS4B,QACfvB,GAAS,GACTE,GAAc,KAEdF,GAAS,GACTE,GAAc,GAEdsB,YAAW,WACTtB,GAAc,GACdN,EAAY,IACZE,EAAoBM,KAAKC,MAAsB,EAAhBD,KAAKE,SAAe,MAClD,OAgCH,wBCzENmB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.730e1365.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport classNames from 'classnames';\nimport './_normalize.scss';\nimport './App.scss';\n\nexport const App: React.FC = () => {\n  const squares = [1, 2, 3, 4, 5, 6];\n  const [selected, setSelected] = useState<number[]>([]);\n  const [blueSquaresCount, setBlueSquaresCount] = useState(0);\n  const [hasError, setError] = useState(false);\n  const [isSuccessful, setSuccessful] = useState(false);\n\n  useEffect(() => {\n    setBlueSquaresCount(Math.floor(Math.random() * 3 + 1));\n  }, []);\n\n  const selectSquare = (value: number) => {\n    setSelected([...selected, value]);\n  };\n\n  const unselectSquare = (value: number) => {\n    setSelected(selected.filter(number => number !== value));\n  };\n\n  const clickHandler = (squareNo: number) => {\n    if (!selected.includes(squareNo)) {\n      selectSquare(squareNo);\n    } else {\n      unselectSquare(squareNo);\n    }\n  };\n\n  const validate = () => {\n    if (selected.some(number => number > blueSquaresCount)\n        || selected.length > blueSquaresCount\n        || !selected.length) {\n      setError(true);\n      setSuccessful(false);\n    } else {\n      setError(false);\n      setSuccessful(true);\n\n      setTimeout(() => {\n        setSuccessful(false);\n        setSelected([]);\n        setBlueSquaresCount(Math.floor(Math.random() * 3 + 1));\n      }, 1000);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      {squares.map(square => (\n        <button\n          type=\"button\"\n          className={classNames(`App__square App__square--${square}`, {\n            'App__square--selected': selected.includes(square),\n            'App__square--blue': square <= blueSquaresCount,\n          })}\n          key={square}\n          onClick={() => clickHandler(square)}\n        >\n          {square}\n        </button>\n      ))}\n\n      {hasError && (\n        <p className=\"App__message App__message--error\">\n          Please, select blue squares only\n        </p>\n      )}\n\n      {isSuccessful && (\n        <p className=\"App__message App__message--success\">\n          Congrats! Input is valid.\n        </p>\n      )}\n\n      <button\n        type=\"submit\"\n        className=\"App__button\"\n        onClick={event => {\n          event.preventDefault();\n          validate();\n        }}\n      >\n        Submit\n      </button>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}